version: '3.5'

services:
  ###
  # applications
  ###

  relayer:
    build:
      context: ../
      dockerfile: ./services/relayer/Dockerfile.development
    container_name: kibisis_relayer
    depends_on:
      - mongodb
    environment:
      # runtime
      ENVIRONMENT: ${ENVIRONMENT:-development}
      MONGODB_HOST: ${MONGODB_HOST:-mongodb}
      MONGODB_NAME: ${MONGODB_NAME:-api}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGODB_PORT: ${MONGODB_PORT:-27017}
      MONGODB_PROTOCOL: ${MONGODB_PROTOCOL:-mongodb://}
      MONGODB_USERNAME: ${MONGODB_USERNAME:-admin}
      RELAYER_PORT:
      # build-time
      SERVICE_NAME: "relayer"
    image: kibisis/relayer
    networks:
      - kibisis_network
    ports:
      - "${RELAYER_PORT:-3000}:${RELAYER_PORT:-3000}"
    volumes:
      - ../services/relayer:/usr/app/services/relayer:cached
      - ../lib:/usr/app/lib:cached
      - ../scripts:/usr/app/scripts:cached

  ###
  # databases
  ###

  mongodb:
    build:
      context: ../
      dockerfile: ./build/mongodb/Dockerfile.development
    container_name: kibisis_mongodb
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_NAME:-api}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
    image: kibisis/mongodb
    networks:
      - kibisis_network
    ports:
      - "${MONGODB_PORT:-27017}:${MONGODB_PORT:-27017}"

networks:
  kibisis_network:
    name: kibisis_network
